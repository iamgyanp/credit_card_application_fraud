install.packages("fPortfolio")
?fPortfolio
?fportfolio
??fPortfolio
library(ggplot2)
library(dplyr)
library(ggmap)
install.packages("ggmap")
map_data
states_map = map_data()
states_map = map_data("state")
View(states_map)
View(states_map)
ggplot(states_map, aes(x = long, y = lat)) +
geom_point()
ggplot(states_map, aes(x = long, y = lat)) +
geom_polygpn()
ggplot(states_map, aes(x = long, y = lat)) +
geom_polygon()
View(states_map)
View(states_map)
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
world_data = map_data("world")
ggplot(world_data, (aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(world_data, (aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(world_data, (aes(x = long, y = lat, group = group))) +
geom_polygon()
View(world_data)
data = world_data
data %>%
filter(region == "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "Taiwan") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "China") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region = "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region = c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region = c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
east_data = map_data(map = "world",
region = c("Taiwan",
"Japan",
"South Korea",
"North Korea",
"China"))
ggplot(east_data, (aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == "India") %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
ggplot(east_data, (aes(x = long, y = lat, group = group))) +
geom_polygon()
data %>%
filter(region == c("Taiwan", "Japan", "South Korea", "North Korea", "China")) %>%
ggplot((aes(x = long, y = lat, group = group))) +
geom_polygon()
crime_data
crime_data = USArrests
states = map_data("state")
crime_data = states %>%
crime_data = states %>%
mutate(state = rownames(crime_data))
crime_data = crime_data %>%
mutate(state = rownames(crime_data))
View(crime_data)
View(crime_data)
crime_map = full_join(states, crime_data, by = c("region", "state"))
crime_map = full_join(states, crime_data, by = c("region" = "state"))
View(crime_map)
tolower("shD")
toupper("dfD")
tolower("californiA")
toupper("califORnia")
crime_data = crime_data %>%
mutate(state = tolower(state))
crime_map = full_join(states, crime_data, by = c("region" = "state"))
View(crime_map)
ggplot(crime_map, (aes(x = long, y = lat, group = group))) +
geom_polygon()
ggplot(crime_map, (aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(crime_map, (aes(x = long, y = lat, group = group))) +
geom_polygon()
)
ggplot(crime_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "red")
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred")
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
them
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_classic()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_linedraw()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_light()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_void()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_classic()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_void()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_light()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_dark()
ggplot(crime_map, aes(x = long, y = lat,
group = group,
fill = Assault)) +
geom_polygon() +
scale_fill_continuous(low = "white", high = "darkred") +
theme_bw()
USC = get_map("University of Southern California")
USC = get_map("University of Southern California")
library(ggplot2)
library(dplyr)
library(ggmap)
USC = get_map("University of Southern California")
ggmap(USC, zoom = 20)
USC = get_map("University of Southern California", zoom = 14)
ggmap(USC, zoom = 20)
ggmap(USC, zoom = 50)
ggmap(USC)
USC = get_map("University of Southern California", zoom = 50)
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15)
ggmap(USC)
USC = get_map("Trader Joe's", zoom = 15)
ggmap(USC)
USC = get_map("NCTU", zoom = 15)
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15)
ggmap(USC)
KGP = get_map("IITKGP", zoom = 15)
ggmap(KGP)
KGP = get_map("IITKGP", zoom = 17)
ggmap(KGP)
KGP = get_map("IITKGP", zoom = 14)
ggmap(KGP)
install.packages("devtools")
USC = get_map("University of Southern California", zoom = 15,
maptype maptype = terrain)
USC = get_map("University of Southern California", zoom = 15,
maptype maptype = terrain)
USC = get_map("University of Southern California", zoom = 15,
maptype = terrain)
USC = get_map("University of Southern California", zoom = 15,
maptype = "terrain")
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15,
maptype = "terrain")
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15,
maptype = "satellite")
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15,
maptype = "roadmap")
ggmap(USC)
USC = get_map("University of Southern California", zoom = 15,
maptype = "hydrid")
USC = get_map("University of Southern California", zoom = 15,
maptype = "hybrid")
ggmap(USC)
?get_map
geocode("University of Southern California")
geocode("1369 W 37th St, LA")
revgeocode(-77.03653, 38.89768)
revgeocode(c(-77.03653, 38.89768))
h_map = get_map("Houston", zoom = 14, color = "bw")
ggmap(h_map)
dt_crimes = filter(crime, lon >= 95.39681 & lon <= 95.34188 &
lat >= 29.73631 & lat <= 29.78400)
dt_crimes = filter(crime, lon >= -95.39681 & lon <= -95.34188 &
lat >= 29.73631 & lat <= 29.78400)
violent_crimes = filter(dt_crimes,
offense %in% c("aggravated assault",
"murder", "rape", "robbery"))
h_map +
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense)
h_map +
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense))
ggmap(hmap) +
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense))
ggmap(h_map)+
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense))
ggmap(h_map) +
geom_point(violent_crimes, aes(x = lon, y = lat, color = offense))
ggmap(h_map) +
geom_point(violent_crimes, aes(x = lon, y = lat,
color = offense,
size = offense))
ggmap(h_map) +
geom_point(data = violent_crimes, aes(x = lon, y = lat,
color = offense,
size = offense))
ggmap(h_map) +
geom_point(data = violent_crimes, aes(x = lon, y = lat,
color = offense))
ggmap(h_map) +
stat_density2d(violent_crimes,
aes(x= lon, y = lat,
fill = ..level..,
alpha= ..level..),
geom = "polygon") +
scale_fill_gradient(low = "white", high = "darkred") +
facet_wrap(~day)
ggmap(h_map) +
stat_density2d(data = violent_crimes,
aes(x= lon, y = lat,
fill = ..level..,
alpha= ..level..),
geom = "polygon") +
scale_fill_gradient(low = "white", high = "darkred") +
facet_wrap(~day)
ggmap(h_map) +
stat_density2d(data = violent_crimes,
aes(x= lon, y = lat,
fill = ..level..,
alpha= ..level..),
geom = "polygon") +
scale_fill_gradient(low = "white", high = "darkred") +
facet_wrap(~day, nrow=2)+
theme(legend.position = 'none')
install.packages("ISLR")
library(ISLR)
ISLR?
ISLR
?ISLR
??ISLR
library(ISLR)
install.packages("caret")
install.packages("e1071")
install.packages("randomForest")
install.packages("keras")
install.packages("ROCR")
library(ISLR)
library(readxl)
library(dplyr)
library(e1071)
data = read_excel('4 Models.xlsx')
setwd("C:/Users/Gyan Prakash/OneDrive - USC Marshall School of Business/Spring 2018/DSO 562/Project 2/Model Building")
data = read_excel('4 Models.xlsx')
train_set = data %>%
filter(`Test (0), Train (1), OOT (2)` == 1)
set.seed(1)
train = train_set[,1:22]
test_set = data %>% filter(`Test (0), Train (1), OOT (2)` != 1)
test =  test_Set[,1:22]
test =  test_set[,1:22]
svmfit=svm(fraud~., data=train, kernel="linear", cost=10,scale=FALSE)
summary(svmfit)
plot(svmfit, train)
pred =
table(predict1, train)
pred = predict(svmfit, train)
remove(pred)
remove(test)
remove(test_set)
View(data)
test_set = data %>% filter(`Test (0), Train (1), OOT (2)` == 0)
test =  test_set[,1:22]
oot_set = data %>% filter(`Test (0), Train (1), OOT (2)` == 2)
oot =  test_set[,1:22]
pred_train = predict(svmfit, train)
cbind(pred, train)
cbind(pred_train, train)
View(train)
train_new = cbind(pred_train, train)
pred_test = predict(svmfit, test)
test_new = cbind(pred_test, test)
pred_oot = predict(svmfit, oot)
oot_new = cbind(pred_oot, oot)
oot_new
as.data.frame.matrix(train_new)
as.data.frame.matrix(test_new)
as.data.frame.matrix(oot_new)
View(oot_new)
library(xlsx)
?write.xlsx
write.xlsx(train_new, "train_new.xlsx", sheetname = 'Sheet1')
library(xlsx)
write.xlsx(train_new, "train_new.xlsx", sheetname = 'Sheet1')
write.xlsx(train_new, "train_new.xlsx")
write.csv(train_new, "train_new.csv")
write.csv(test_new, "test_new.csv")
write.csv(oot_new, "oot_new.csv")
oot_set = data %>% filter(`Test (0), Train (1), OOT (2)` == 2)
oot =  test_set[,1:22]
oot =  oot_set[,1:22]
pred_oot = predict(svmfit, oot)
oot_new = cbind(pred_oot, oot)
as.data.frame.matrix(oot_new)
write.csv(oot_new, "oot_new.csv")
#Linear Regression
linearfit = lm(formula=fraud~., data=train)
pred_train_2 = predict(linearfit, train)
train_new_2 = cbind(pred_train_2, train)
pred_test_2 = predict(linearfit, test)
test_new_2 = cbind(pred_test_2, test)
pred_oot_2 = predict(linearfit, oot)
oot_new_2 = cbind(pred_oot_2, oot)
as.data.frame.matrix(train_new_2)
as.data.frame.matrix(test_new_2)
as.data.frame.matrix(oot_new_2)
write.csv(train_new, "linreg_train_new.csv")
write.csv(test_new, "linreg_test_new.csv")
write.csv(oot_new, "linreg_oot_new.csv")
write.csv(train_new_2, "linreg_train_new.csv")
write.csv(test_new_2, "linreg_test_new.csv")
write.csv(oot_new_2, "linreg_oot_new.csv")
library(dplyr)
library(readxl)
test = read_xlsx("Probabilities for all Models.xlsx", sheetname = 'testing')
library(xlsx)
test = read_xlsx("Probabilities for all Models.xlsx", sheetname = 'testing')
test = read_xlsx("Probabilities for all Models.xlsx", sheet_name = 'testing')
test = read_xlsx("Probabilities for all Models.xlsx", sheetname = 'Testing')
?read_xlsx
test = read_excel("Probabilities for all Models", sheetname = 'Testing')
test = read_excel("Probabilities for all Models")
test = read_excel("Probabilities for all Models.xlsx")
test = read_excel("Probabilities for all Models.xlsx")
View(test)
test = read_excel("Probabilities for all Models.xlsx", sheet = 'Testing')
train = read_excel("Probabilities for all Models.xlsx", sheet = 'Training')
test = read_excel("Probabilities for all Models.xlsx", sheet = 'Testing')
oot = read_excel("Probabilities for all Models.xlsx", sheet = 'OOT')
View(oot)
train = train[:, 1:6]
train = train[:, 1:6]
train = train[, 1:6]
View(train)
test = test[, 1:6]
oot = oot[, 1:6]
View(test)
train = train[sample(nrow(train)),]
test = test[sample(nrow(test)),]
oot = oot[sample(nrowoot),]
oot = oot[sample(nrow(oot),]
oot = oot[sample(nrow(oot)),]
train_nrows = nrows(train)
train_nrows = nrow(train)
test_nrows = nrow(test)
oot_nrows = nrow(oot)
oot_nrows
seq(1,10)
floor(1.2)
for(i in seq(1,25)){
oot[0:floor(100*i/oot_nrows),] %>% sum(fraud)
}
oot[0:floor(100*i/oot_nrows),] %>% sum(oot$fraud)
oot[0:floor(100*i/oot_nrows),]
oot[0:floor(100*1/oot_nrows),]
x=oot[0:floor(100*1/oot_nrows),]
View(x)
oot[1:2,]
oot[0:2,]
floor(100*1/oot_nrows)
for(i in seq(1,25)){
oot[0:floor(0.01*i*oot_nrows),] %>% sum(oot$fraud)
}
as.data.frame.data.frame(i)
i
x = oot[0:floor(0.01*i*oot_nrows),] %>% sum(oot$fraud)
for(i in seq(1,25)){
x[i] = oot[0:floor(0.01*i*oot_nrows),] %>% sum(oot$fraud)
}
x
View(oot)
sum(oot$fraud)
x[i] = (oot[0:floor(0.01*i*oot_nrows),] %>% sum(oot$fraud))
x
for(i in seq(1,25)){
x[i] = oot[0:floor(0.01*i*oot_nrows),] %>% sum(oot$fraud)
}
x
for(i in seq(1,25)){
x[i] = sum(oot[0:floor(0.01*i*oot_nrows),]$fraud)
}
x
